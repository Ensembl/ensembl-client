@import 'src/styles/common';
@import 'helpArticleConstants';

$indexItemWidth: 364px;
$indexItemsHorizontalGap: 100px;
$pageLeftPadding: 88px;
$asideLeftPadding: 12px;
$textColumnWidth: 450px;
$listItemIndent: 34px;
$topListItemMarginBottom: 1ch;

.textArticle {
  height: 100%;
  overflow-y: auto;
  padding-left: $heading-outdent;
  padding-bottom: 3rem;

  h1 {
    font-size: 15px;
    line-height: 18px;
    font-weight: $normal;
    margin: 0 0 $heading-margin-bottom -#{$heading-outdent};
  }

  h2,
  h3 {
    font-size: 13px;
    margin-bottom: $line-height;
  }

  h2 {
    margin-top: calc(2 * #{$line-height});
    margin-left: -#{$heading-outdent};
  }

  h3 {
    margin-top: $line-height;
  }

  h1,
  h2,
  h3,
  p,
  ul,
  ol {
    width: $textColumnWidth;
  }

  p {
    margin: $line-height 0;
  }

  /* ==== LISTS ==== */

  ul, ol {
    padding-left: $listItemIndent;
  }

  /* items of the top-level and second-level unordered list have black solid disks as list markers */
  ul li {
    padding-left: 5px;
    list-style-type: disc;
  }

  /* top-level list items have a margin-bottom, if not immediately followed by a nested list */
  ul li:not(:has(+ ul, + ol)),
  ol li:not(:has(+ ul, + ol)) {
    margin-bottom: $line-height;
  }

  /* in nested lists, list items do not have a margin-bottom */
  ul ul li,
  ul ol li,
  ol ol li,
  ol ul li {
    margin-bottom: unset;
  }

  /* list items of third-level lists have hyphens as list item markers */
  ul > ul > ul li {
    list-style-type: '-';
  }

  /* numbering of nested ordered lists goes like: 1, 1.1, 1.1.1 */
  ol > li::marker {
    content: counters(list-item, '.') '. ';
  }

  /* ==== END OF LISTS ==== */



  figure {
    margin: 1em 0;
  }

  hr {
    display: inline-block;
    width: $textColumnWidth;
  }

  // Notice that the external-link svg has the same shape as in the static/img/shared folder
  // But the version copied here has the fill color set inline, because it is being accessed as an external image via url
  a[href^='http'] {
    &::before {
      content: '';
      background-image: url('static/icons/icon_xlink_orange.svg');
      background-repeat: no-repeat;
      background-position: center;
      margin: 0 0.125rem;
      padding: 0 5px;
    }
  }

  pre {
    background-color: $light-grey; // Add a background color to code snippets
    padding: 15px;
  }
}

.indexArticle {
  display: grid;
  grid-template-columns: repeat(3, #{$indexItemWidth});
  grid-column-gap: $indexItemsHorizontalGap;
  grid-row-gap: 52px;
  max-width: calc(3 * #{$indexItemWidth} + 2 * #{$indexItemsHorizontalGap});

  .indexItem {
    width: $indexItemWidth;
    flex: 0 0 auto;
  }

  h2 {
    font-size: 16px;
    font-weight: $bold;
  }
}

@media (max-width: #{$pageLeftPadding + 3 * $indexItemWidth + 2 * $indexItemsHorizontalGap}) {
  .indexArticle {
    grid-template-columns: repeat(2, #{$indexItemWidth});
  }
}

.videoArticle {
  height: 90%;
}

.videoWrapper {
  // the position of the wrapper is set to relative and the position of the iframe to absolute
  // because the wrapper needs to change its dimensions when its parent does
  // while iframe's dimensions are set via javascript by observing wrapper's dimensions through ResizeObserver
  // TODO: change this to aspect-ratio CSS rule when it gets better browser support
  position: relative;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;

  iframe {
    position: absolute;
    top: 0;
  }
}

.videoLoadingIndicator {
  display: flex;
  align-items: center;
  justify-content: center;
}

.aside {
  grid-column: aside;
  align-self: start;

  h2 {
    font-size: 13px;
    font-weight: $light;
    margin: 1.5rem 0;
  }
}

.relatedArticles {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.relatedArticle,
.relatedVideo {
  color: $blue;
  cursor: pointer;
  margin-bottom: 0.4rem;
}

.relatedVideo {
  position: relative;
}

.relatedVideoIcon {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 50%;
  transform: translate(-100%, -50%);
  background-color: $blue;
  height: 10px;
  width: 16px;
  margin-left: -#{$asideLeftPadding};

  svg {
    height: 80%;
    fill: white;
  }
}

.relatedArticleActive {
  color: $black;
}
