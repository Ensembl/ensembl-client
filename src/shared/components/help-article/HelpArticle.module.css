/* NOTE:
  the text article class requires access to variables
  defined in helpArticleVariables.module.css
*/

.textArticle {
  --text-column-width: 450px;
  height: 100%;
  overflow-y: auto;
  padding-left: var(--heading-outdent);
  padding-bottom: 3rem;

  h1 {
    font-size: 17px;
    line-height: 18px;
    font-weight: var(--font-weight-normal);
    margin: 0 0 var(--heading-margin-bottom) calc(-1 * var(--heading-outdent));
  }

  h2,
  h3 {
    font-size: 13px;
    margin-bottom: var(--line-height);
  }

  h2 {
    margin-top: calc(2 * var(--line-height));
    margin-left: calc(-1 * var(--heading-outdent));
  }

  h3 {
    margin-top: var(--line-height);
  }

  h1,
  h2,
  h3,
  p,
  ul,
  ol {
    width: var(--text-column-width);
  }

  p {
    margin: var(--line-height) 0;
  }

  /* a paragraph with a single image in it is a typical outcome of markdown file parsing */
  p:has(img:only-child) {
    width: 100%;
  }

  /* ==== LISTS ==== */

  ul, ol {
    padding-left: 34px;
  }

  /* items of the top-level and second-level unordered list have black solid disks as list markers */
  ul li {
    padding-left: 5px;
    list-style-type: disc;
  }

  /* top-level list items have a margin-bottom, if not immediately followed by a nested list */
  ul li:not(:has(+ ul, + ol)),
  ol li:not(:has(+ ul, + ol)) {
    margin-bottom: var(--line-height);
  }

  /* in nested lists, list items do not have a margin-bottom */
  ul ul li,
  ul ol li,
  ol ol li,
  ol ul li {
    margin-bottom: unset;
  }

  /* list items of third-level lists have hyphens as list item markers */
  ul > ul > ul li {
    list-style-type: '-';
  }

  /* numbering of nested ordered lists goes like: 1, 1.1, 1.1.1 */
  ol > li::marker {
    content: counters(list-item, '.') '. ';
  }

  /* ==== END OF LISTS ==== */


  figure {
    margin-top: 30px;
    margin-bottom: 40px;
  }

  figcaption {
    margin-top: 10px;
    font-size: 11px;
    font-weight: var(--font-weight-light);
    width: var(--text-column-width);
  }

  /* if anyone decides to split caption text into paragraphs */
  figcaption p {
    margin: 0;
  }

  img {
    margin-top: 30px;
    margin-bottom: 40px;
  }

  figure:has(img) img {
    margin-top: 0;
    margin-bottom: 0;
  }

  hr {
    display: inline-block;
    width: var(--text-column-width);
  }

  /* Notice that the external-link svg has the same shape as in the static/img/shared folder
     But the version copied here has the fill color set inline, because it is being accessed as an external image via url
  */
  a[href^='http'] {
    &::before {
      content: '';
      background-image: url('static/icons/icon_xlink_orange.svg');
      background-repeat: no-repeat;
      background-position: center;
      margin: 0 0.125rem;
      padding: 0 5px;
    }
  }

  pre {
    background-color: var(--color-light-grey); /* Add a background color to code snippets */
    padding: 15px;
    font-family: var(--font-family-monospace);
  }
}

.videoArticle {
  height: 90%;
}

.videoWrapper {
  /*
    the position of the wrapper is set to relative and the position of the iframe to absolute
    because the wrapper needs to change its dimensions when its parent does
    while iframe's dimensions are set via javascript by observing wrapper's dimensions through ResizeObserver
    TODO: change this to aspect-ratio CSS rule when it gets better browser support
  */
  position: relative;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;

  iframe {
    position: absolute;
    top: 0;
  }
}

.videoLoadingIndicator {
  display: flex;
  align-items: center;
  justify-content: center;
}

.aside {
  grid-column: aside;
  align-self: start;

  h2 {
    font-size: 13px;
    font-weight: var(--font-weight-light);
    margin: 1.5rem 0;
  }
}

.relatedArticles {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.relatedArticle,
.relatedVideo {
  color: var(--color-blue);
  cursor: pointer;
  margin-bottom: 0.4rem;
}

.relatedVideo {
  position: relative;
}

.relatedVideoIcon {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 50%;
  transform: translate(-100%, -50%);
  background-color: var(--color-blue);
  height: 10px;
  width: 16px;
  margin-left: -12px;

  svg {
    height: 80%;
    fill: white;
  }
}

.relatedArticleActive {
  color: var(--color-black);
}
