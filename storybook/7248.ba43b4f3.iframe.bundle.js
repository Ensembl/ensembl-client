(()=>{"use strict";var deferred,next,__webpack_modules__={"./src/shared/workers/feature-sequence-download/featureSequenceDownload.worker.ts":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{__webpack_require__("./node_modules/core-js/modules/es.symbol.description.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.async-iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.error.cause.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.promise.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js");var comlink=__webpack_require__("./node_modules/comlink/dist/esm/comlink.mjs"),LINE_LENGTH=(__webpack_require__("./node_modules/core-js/modules/es.array.push.js"),60),toFasta=function toFasta(sequence){var options=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{header,value:rawSequence}=sequence,{lineLength=LINE_LENGTH}=options,formattedSequence=[];header&&formattedSequence.push(">".concat(header));for(var row="",i=0;i<rawSequence.length;i++){row+=rawSequence[i];var isAtEndOfLine=(i+1)%lineLength==0;(i===rawSequence.length-1||isAtEndOfLine)&&(formattedSequence.push(row),row="")}return formattedSequence.join("\n")},esm=__webpack_require__("./node_modules/graphql-request/build/esm/index.js"),defaultEnvironment=(__webpack_require__("./node_modules/core-js/modules/es.regexp.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.string.starts-with.js"),__webpack_require__("./node_modules/core-js/modules/web.url-search-params.js"),__webpack_require__("./node_modules/core-js/modules/es.global-this.js"),{buildEnvironment:"production",deploymentEnvironment:"development"}),readEnvironment=()=>{var _CONFIG_FIELD_ON_WIND,_CONFIG_FIELD_ON_WIND2,_globalThis$process$e,_globalThis$process,_globalThis$process$e2,_globalThis$process2;return isClient()?null!==(_CONFIG_FIELD_ON_WIND=null===(_CONFIG_FIELD_ON_WIND2=window.__CONFIG__)||void 0===_CONFIG_FIELD_ON_WIND2?void 0:_CONFIG_FIELD_ON_WIND2.environment)&&void 0!==_CONFIG_FIELD_ON_WIND?_CONFIG_FIELD_ON_WIND:defaultEnvironment:{buildEnvironment:null!==(_globalThis$process$e=null===(_globalThis$process=globalThis.process)||void 0===_globalThis$process?void 0:_globalThis$process.env.NODE_ENV)&&void 0!==_globalThis$process$e?_globalThis$process$e:"production",deploymentEnvironment:null!==(_globalThis$process$e2=null===(_globalThis$process2=globalThis.process)||void 0===_globalThis$process2?void 0:_globalThis$process2.env.ENVIRONMENT)&&void 0!==_globalThis$process$e2?_globalThis$process$e2:"development"}},isClient=()=>"object"==typeof window,host="".concat("localhost",":").concat(8080),hostWithProtocol="http://".concat(host);function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var defaultApiUrls={coreApiUrl:"/api/graphql/core",metadataApiBaseUrl:"/api/metadata",comparaApiBaseUrl:"/api/graphql/compara",docsBaseUrl:"/api/docs",genomeBrowserBackendBaseUrl:"/api/browser/data",refgetBaseUrl:"/api/refget",tracksApiBaseUrl:"/api/tracks",toolsApiBaseUrl:"/api/tools",searchApiBaseUrl:"/api/search",variationApiUrl:"/api/graphql/variation"},defaultKeys={googleAnalyticsKey:""},buildEnvironment=readEnvironment().buildEnvironment;const config=_objectSpread(_objectSpread({app_version:"0.4.0",isDevelopment:"development"===buildEnvironment,isProduction:"development"!==buildEnvironment,shouldReportAnalytics:isClient()&&(null===(_CONFIG_FIELD_ON_WIND4=window.__CONFIG__)||void 0===_CONFIG_FIELD_ON_WIND4?void 0:_CONFIG_FIELD_ON_WIND4.environment.shouldReportAnalytics),shouldReportErrors:isClient()&&(null===(_CONFIG_FIELD_ON_WIND5=window.__CONFIG__)||void 0===_CONFIG_FIELD_ON_WIND5?void 0:_CONFIG_FIELD_ON_WIND5.environment.shouldReportErrors),apiHost:""},isClient()?null!==(_CONFIG_FIELD_ON_WIND=null===(_CONFIG_FIELD_ON_WIND2=window.__CONFIG__)||void 0===_CONFIG_FIELD_ON_WIND2?void 0:_CONFIG_FIELD_ON_WIND2.apiPaths)&&void 0!==_CONFIG_FIELD_ON_WIND?_CONFIG_FIELD_ON_WIND:defaultApiUrls:{coreApiUrl:null!==(_globalThis$process$e=null===(_globalThis$process=globalThis.process)||void 0===_globalThis$process?void 0:_globalThis$process.env.SSR_CORE_API_BASE_URL)&&void 0!==_globalThis$process$e?_globalThis$process$e:"".concat(hostWithProtocol).concat(defaultApiUrls.coreApiUrl),docsBaseUrl:null!==(_globalThis$process$e2=null===(_globalThis$process2=globalThis.process)||void 0===_globalThis$process2?void 0:_globalThis$process2.env.SSR_DOCS_BASE_URL)&&void 0!==_globalThis$process$e2?_globalThis$process$e2:"".concat(hostWithProtocol).concat(defaultApiUrls.docsBaseUrl),variationApiUrl:null!==(_globalThis$process$e3=null===(_globalThis$process3=globalThis.process)||void 0===_globalThis$process3?void 0:_globalThis$process3.env.SSR_VARIATION_GRAPHQL_API_URL)&&void 0!==_globalThis$process$e3?_globalThis$process$e3:"".concat(hostWithProtocol).concat(defaultApiUrls.variationApiUrl),metadataApiBaseUrl:null!==(_globalThis$process$e4=null===(_globalThis$process4=globalThis.process)||void 0===_globalThis$process4?void 0:_globalThis$process4.env.SSR_METADATA_API_URL)&&void 0!==_globalThis$process$e4?_globalThis$process$e4:"".concat(hostWithProtocol).concat(defaultApiUrls.metadataApiBaseUrl),comparaApiBaseUrl:defaultApiUrls.comparaApiBaseUrl,genomeBrowserBackendBaseUrl:defaultApiUrls.genomeBrowserBackendBaseUrl,refgetBaseUrl:defaultApiUrls.refgetBaseUrl,tracksApiBaseUrl:defaultApiUrls.tracksApiBaseUrl,toolsApiBaseUrl:defaultApiUrls.toolsApiBaseUrl,searchApiBaseUrl:defaultApiUrls.searchApiBaseUrl}),isClient()&&(null===(_CONFIG_FIELD_ON_WIND3=window.__CONFIG__)||void 0===_CONFIG_FIELD_ON_WIND3?void 0:_CONFIG_FIELD_ON_WIND3.keys)||defaultKeys);var _CONFIG_FIELD_ON_WIND3,_globalThis$process$e,_globalThis$process,_globalThis$process$e2,_globalThis$process2,_globalThis$process$e3,_globalThis$process3,_globalThis$process$e4,_globalThis$process4,_CONFIG_FIELD_ON_WIND,_CONFIG_FIELD_ON_WIND2,_CONFIG_FIELD_ON_WIND5,_CONFIG_FIELD_ON_WIND4,refget=params=>{var{checksum,start,end}=params,searchParams=new URLSearchParams;if("number"==typeof start){var refgetStart=start-1;searchParams.append("start","".concat(refgetStart))}return"number"==typeof end&&searchParams.append("end","".concat(end)),searchParams.append("accept","text/plain"),"".concat(config.refgetBaseUrl,"/sequence/").concat(checksum,"?").concat(searchParams.toString())},forwardToReverseStrandMap=(__webpack_require__("./node_modules/core-js/modules/es.array.reverse.js"),new Map);"ACGTURYWSMKBDHVNXacgturywsmkbdhvnx".split("").forEach(((character,index)=>{forwardToReverseStrandMap.set(character,"TGCAAYRWSKMVHDBNXtgcaayrwskmvhdbnx"[index])}));var _templateObject,_templateObject2,_templateObject3,getReverseComplement=sequence=>sequence.split("").map((character=>forwardToReverseStrandMap.get(character))).reverse().join("");function _taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}var geneAndTranscriptsFragment=(0,esm.J1)(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  fragment GeneAndTranscripts on Gene {\n    stable_id\n    slice {\n      location {\n        start\n        end\n      }\n      region {\n        sequence {\n          checksum\n        }\n      }\n      strand {\n        code\n      }\n    }\n    transcripts {\n      stable_id\n      relative_location {\n        start\n        end\n      }\n      spliced_exons {\n        index\n        relative_location {\n          start\n          end\n        }\n        exon {\n          stable_id\n        }\n      }\n      product_generating_contexts {\n        cds {\n          sequence {\n            checksum\n          }\n        }\n        cdna {\n          sequence {\n            checksum\n          }\n        }\n        product {\n          stable_id\n          sequence {\n            checksum\n          }\n        }\n      }\n    }\n  }\n"]))),geneAndTranscriptsQuery=(0,esm.J1)(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  query GeneAndTranscripts($genomeId: String!, $geneId: String!) {\n    gene(by_id: { genome_id: $genomeId, stable_id: $geneId }) {\n      ...GeneAndTranscripts\n    }\n  }\n  ","\n"])),geneAndTranscriptsFragment),transcriptAndGeneQuery=(0,esm.J1)(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  query TranscriptAndGene($genomeId: String!, $transcriptId: String!) {\n    transcript(by_id: { genome_id: $genomeId, stable_id: $transcriptId }) {\n      gene {\n        ...GeneAndTranscripts\n      }\n    }\n  }\n  ","\n"])),geneAndTranscriptsFragment);function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _awaitAsyncGenerator(e){return new _OverloadYield(e,0)}function _wrapAsyncGenerator(fn){return function(){return new _AsyncGenerator(fn.apply(this,arguments))}}function _AsyncGenerator(e){var r,t;function resume(r,t){try{var n=e[r](t),o=n.value,u=o instanceof _OverloadYield;Promise.resolve(u?o.v:o).then((function(t){if(u){var i="return"===r?"return":"next";if(!o.k||t.done)return resume(i,t);t=e[i](t).value}settle(n.done?"return":"normal",t)}),(function(e){resume("throw",e)}))}catch(e){settle("throw",e)}}function settle(e,n){switch(e){case"return":r.resolve({value:n,done:!0});break;case"throw":r.reject(n);break;default:r.resolve({value:n,done:!1})}(r=r.next)?resume(r.key,r.arg):t=null}this._invoke=function(e,n){return new Promise((function(o,u){var i={key:e,arg:n,resolve:o,reject:u,next:null};t?t=t.next=i:(r=t=i,resume(e,n))}))},"function"!=typeof e.return&&(this.return=void 0)}function _OverloadYield(t,e){this.v=t,this.k=e}function _geneAndTranscriptsSequences(){return(_geneAndTranscriptsSequences=_wrapAsyncGenerator((function*(params){var{genomeId,geneId,geneSequenceTypes,transcriptSequenceTypes}=params,metadata=yield _awaitAsyncGenerator(fetchGeneAndTranscriptsMetadata({genomeId,geneId})),strand=metadata.gene.slice.strand.code,geneSequence="";if(needsGenomicSequence(params)){var regionChecksum=metadata.gene.slice.region.sequence.checksum,geneStart=metadata.gene.slice.location.start,geneEnd=metadata.gene.slice.location.end,refgetUrl=refget({checksum:regionChecksum,start:geneStart,end:geneEnd});geneSequence=yield _awaitAsyncGenerator(fetch(refgetUrl).then((response=>response.text()))),"reverse"===strand&&(geneSequence=getReverseComplement(geneSequence))}if(null!=geneSequenceTypes&&geneSequenceTypes.genomic&&(yield{label:"".concat(geneId," genomic"),sequence:geneSequence}),null!=geneSequenceTypes&&geneSequenceTypes.exons)for(var transcript of metadata.gene.transcripts)for(var splicedExon of transcript.spliced_exons){var exonSequence=getExonSequence({geneSequence,transcript_relative_location:transcript.relative_location,exon_relative_location:splicedExon.relative_location}),exonLabel=buildExonLabel({splicedExon,geneId:metadata.gene.stable_id,transcriptId:transcript.stable_id,exonsCount:transcript.spliced_exons.length});yield{label:exonLabel,sequence:exonSequence}}for(var _transcript of metadata.gene.transcripts){var productGeneratingContext=_transcript.product_generating_contexts[0];if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.genomic){var transcriptSequence=getTranscriptSequence({geneSequence,transcript_relative_location:_transcript.relative_location});yield{label:"".concat(_transcript.stable_id," genomic"),sequence:transcriptSequence}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.exons)for(var _splicedExon of _transcript.spliced_exons){var _exonSequence=getExonSequence({geneSequence,transcript_relative_location:_transcript.relative_location,exon_relative_location:_splicedExon.relative_location}),_exonLabel=buildExonLabel({splicedExon:_splicedExon,transcriptId:_transcript.stable_id,exonsCount:_transcript.spliced_exons.length});yield{label:_exonLabel,sequence:_exonSequence}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.cdna){var sequenceChecksum=productGeneratingContext.cdna.sequence.checksum,url=refget({checksum:sequenceChecksum}),sequence=yield _awaitAsyncGenerator(fetch(url).then((response=>response.text())));yield{label:"".concat(_transcript.stable_id," cdna"),sequence}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.cds){var _productGeneratingCon,_sequenceChecksum=null===(_productGeneratingCon=productGeneratingContext.cds)||void 0===_productGeneratingCon?void 0:_productGeneratingCon.sequence.checksum;if(_sequenceChecksum){var _url=refget({checksum:_sequenceChecksum}),_sequence=yield _awaitAsyncGenerator(fetch(_url).then((response=>response.text())));yield{label:"".concat(_transcript.stable_id," cds"),sequence:_sequence}}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.protein){var product=productGeneratingContext.product;if(product){var _sequenceChecksum2=product.sequence.checksum,_url2=refget({checksum:_sequenceChecksum2}),_sequence2=yield _awaitAsyncGenerator(fetch(_url2).then((response=>response.text())));yield{label:"".concat(product.stable_id," pep"),sequence:_sequence2}}}}}))).apply(this,arguments)}function _transcriptAndGeneSequences(){return(_transcriptAndGeneSequences=_wrapAsyncGenerator((function*(params){var{genomeId,transcriptId,geneSequenceTypes,transcriptSequenceTypes}=params,metadata=yield _awaitAsyncGenerator(fetchTranscriptAndGeneMetadata({genomeId,transcriptId})),gene=metadata.transcript.gene,transcript=metadata.transcript.gene.transcripts.find((_ref=>{var{stable_id}=_ref;return stable_id===transcriptId})),strand=metadata.transcript.gene.slice.strand.code,geneSequence="";if(needsGenomicSequence(params)){var regionChecksum=gene.slice.region.sequence.checksum,geneStart=gene.slice.location.start,geneEnd=gene.slice.location.end,refgetUrl=refget({checksum:regionChecksum,start:geneStart,end:geneEnd});geneSequence=yield _awaitAsyncGenerator(fetch(refgetUrl).then((response=>response.text()))),"reverse"===strand&&(geneSequence=getReverseComplement(geneSequence))}var productGeneratingContext=transcript.product_generating_contexts[0];if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.genomic){var transcriptSequence=getTranscriptSequence({geneSequence,transcript_relative_location:transcript.relative_location});yield{label:"".concat(transcript.stable_id," genomic"),sequence:transcriptSequence}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.exons)for(var splicedExon of transcript.spliced_exons){var exonSequence=getExonSequence({geneSequence,transcript_relative_location:transcript.relative_location,exon_relative_location:splicedExon.relative_location}),exonLabel=buildExonLabel({splicedExon,transcriptId:transcript.stable_id,exonsCount:transcript.spliced_exons.length});yield{label:exonLabel,sequence:exonSequence}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.cdna){var sequenceChecksum=productGeneratingContext.cdna.sequence.checksum,url=refget({checksum:sequenceChecksum}),sequence=yield _awaitAsyncGenerator(fetch(url).then((response=>response.text())));yield{label:"".concat(transcript.stable_id," cdna"),sequence}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.cds){var _productGeneratingCon2,_sequenceChecksum3=null===(_productGeneratingCon2=productGeneratingContext.cds)||void 0===_productGeneratingCon2?void 0:_productGeneratingCon2.sequence.checksum;if(_sequenceChecksum3){var _url3=refget({checksum:_sequenceChecksum3}),_sequence3=yield _awaitAsyncGenerator(fetch(_url3).then((response=>response.text())));yield{label:"".concat(transcript.stable_id," cds"),sequence:_sequence3}}}if(null!=transcriptSequenceTypes&&transcriptSequenceTypes.protein){var product=productGeneratingContext.product;if(product){var _sequenceChecksum4=product.sequence.checksum,_url4=refget({checksum:_sequenceChecksum4}),_sequence4=yield _awaitAsyncGenerator(fetch(_url4).then((response=>response.text())));yield{label:"".concat(product.stable_id," pep"),sequence:_sequence4}}}if(null!=geneSequenceTypes&&geneSequenceTypes.genomic&&(yield{label:"".concat(gene.stable_id," genomic"),sequence:geneSequence}),null!=geneSequenceTypes&&geneSequenceTypes.exons)for(var _transcript2 of gene.transcripts)for(var _splicedExon2 of _transcript2.spliced_exons){var _exonSequence2=getExonSequence({geneSequence,transcript_relative_location:_transcript2.relative_location,exon_relative_location:_splicedExon2.relative_location}),_exonLabel2=buildExonLabel({splicedExon:_splicedExon2,geneId:gene.stable_id,transcriptId:_transcript2.stable_id,exonsCount:_transcript2.spliced_exons.length});yield{label:_exonLabel2,sequence:_exonSequence2}}}))).apply(this,arguments)}_AsyncGenerator.prototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this},_AsyncGenerator.prototype.next=function(e){return this._invoke("next",e)},_AsyncGenerator.prototype.throw=function(e){return this._invoke("throw",e)},_AsyncGenerator.prototype.return=function(e){return this._invoke("return",e)};var transcriptQueryForProtein_templateObject,needsGenomicSequence=params=>{var{geneSequenceTypes,transcriptSequenceTypes}=params;return(null==geneSequenceTypes?void 0:geneSequenceTypes.genomic)||(null==geneSequenceTypes?void 0:geneSequenceTypes.exons)||(null==transcriptSequenceTypes?void 0:transcriptSequenceTypes.genomic)||(null==transcriptSequenceTypes?void 0:transcriptSequenceTypes.exons)},getTranscriptSequence=params=>{var{start,end}=params.transcript_relative_location;return params.geneSequence.slice(start-1,end)},getExonSequence=params=>{var exonRelativeLocationInGene=(params=>{var{transcript,exon}=params;return{start:transcript.relative_start+exon.relative_start-1,end:transcript.relative_start+exon.relative_end-1}})({exon:{relative_start:params.exon_relative_location.start,relative_end:params.exon_relative_location.end},transcript:{relative_start:params.transcript_relative_location.start}}),exonStartIndex=exonRelativeLocationInGene.start-1,exonEndIndex=exonRelativeLocationInGene.end;return params.geneSequence.slice(exonStartIndex,exonEndIndex)},buildExonLabel=params=>{var{index:exonIndex,exon:{stable_id:exonId}}=params.splicedExon,genePart=params.geneId?"gene:".concat(params.geneId," "):"",transcriptPart="transcript:".concat(params.transcriptId," "),exonOrderPart="exon:".concat(exonIndex," total_exons:").concat(params.exonsCount);return"".concat(exonId," ").concat(genePart).concat(transcriptPart).concat(exonOrderPart)},fetchGeneAndTranscriptsMetadata=function(){var _ref2=_asyncToGenerator((function*(variables){var graphQLClient=new esm.l4("/api/graphql/core",{jsonSerializer:JSON});return yield graphQLClient.request(geneAndTranscriptsQuery,variables)}));return function fetchGeneAndTranscriptsMetadata(_x3){return _ref2.apply(this,arguments)}}(),fetchTranscriptAndGeneMetadata=function(){var _ref3=_asyncToGenerator((function*(variables){var graphQLClient=new esm.l4("/api/graphql/core",{jsonSerializer:JSON});return yield graphQLClient.request(transcriptAndGeneQuery,variables)}));return function fetchTranscriptAndGeneMetadata(_x4){return _ref3.apply(this,arguments)}}();var transcriptQueryForProtein=(0,esm.J1)(transcriptQueryForProtein_templateObject||(transcriptQueryForProtein_templateObject=function transcriptQueryForProtein_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  query TranscriptProteinChecksums($genomeId: String!, $transcriptId: String!) {\n    transcript(by_id: { genome_id: $genomeId, stable_id: $transcriptId }) {\n      stable_id\n      product_generating_contexts {\n        cds {\n          sequence {\n            checksum\n          }\n        }\n        product {\n          stable_id\n          sequence {\n            checksum\n          }\n        }\n      }\n    }\n  }\n"])));function proteinDownload_asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function proteinDownload_awaitAsyncGenerator(e){return new proteinDownload_OverloadYield(e,0)}function proteinDownload_AsyncGenerator(e){var r,t;function resume(r,t){try{var n=e[r](t),o=n.value,u=o instanceof proteinDownload_OverloadYield;Promise.resolve(u?o.v:o).then((function(t){if(u){var i="return"===r?"return":"next";if(!o.k||t.done)return resume(i,t);t=e[i](t).value}settle(n.done?"return":"normal",t)}),(function(e){resume("throw",e)}))}catch(e){settle("throw",e)}}function settle(e,n){switch(e){case"return":r.resolve({value:n,done:!0});break;case"throw":r.reject(n);break;default:r.resolve({value:n,done:!1})}(r=r.next)?resume(r.key,r.arg):t=null}this._invoke=function(e,n){return new Promise((function(o,u){var i={key:e,arg:n,resolve:o,reject:u,next:null};t?t=t.next=i:(r=t=i,resume(e,n))}))},"function"!=typeof e.return&&(this.return=void 0)}function proteinDownload_OverloadYield(t,e){this.v=t,this.k=e}function _getProteinRelatedSequences(){return _getProteinRelatedSequences=function proteinDownload_wrapAsyncGenerator(fn){return function(){return new proteinDownload_AsyncGenerator(fn.apply(this,arguments))}}((function*(params){var transcript=(yield proteinDownload_awaitAsyncGenerator(fetchTranscriptMetadata(params))).transcript,productGeneratingContext=transcript.product_generating_contexts[0];if(params.sequenceTypes.protein){var proteinId=productGeneratingContext.product.stable_id,checksum=productGeneratingContext.product.sequence.checksum,refgetUrl=refget({checksum}),sequence=yield proteinDownload_awaitAsyncGenerator(fetch(refgetUrl).then((response=>response.text())));yield{label:"".concat(proteinId," pep"),sequence}}if(params.sequenceTypes.cds){var _checksum=productGeneratingContext.cds.sequence.checksum,_refgetUrl=refget({checksum:_checksum}),_sequence=yield proteinDownload_awaitAsyncGenerator(fetch(_refgetUrl).then((response=>response.text())));yield{label:"".concat(transcript.stable_id," cds"),sequence:_sequence}}})),_getProteinRelatedSequences.apply(this,arguments)}proteinDownload_AsyncGenerator.prototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this},proteinDownload_AsyncGenerator.prototype.next=function(e){return this._invoke("next",e)},proteinDownload_AsyncGenerator.prototype.throw=function(e){return this._invoke("throw",e)},proteinDownload_AsyncGenerator.prototype.return=function(e){return this._invoke("return",e)};var regionChecksumQuery_templateObject,fetchTranscriptMetadata=function(){var _ref=function proteinDownload_asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){proteinDownload_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){proteinDownload_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}((function*(variables){var graphQLClient=new esm.l4("/api/graphql/core",{jsonSerializer:JSON});return yield graphQLClient.request(transcriptQueryForProtein,variables)}));return function fetchTranscriptMetadata(_x2){return _ref.apply(this,arguments)}}();var regionChecksumQuery=(0,esm.J1)(regionChecksumQuery_templateObject||(regionChecksumQuery_templateObject=function regionChecksumQuery_taggedTemplateLiteral(strings,raw){return raw||(raw=strings.slice(0)),Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}))}(["\n  query RegionChecksum($genomeId: String!, $regionName: String!) {\n    region(by_name: { genome_id: $genomeId, name: $regionName }) {\n      sequence {\n        checksum\n      }\n    }\n  }\n"])));function genomicSliceDownload_asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function genomicSliceDownload_asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){genomicSliceDownload_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){genomicSliceDownload_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}var getGenomicSliceSequence=function(){var _ref=genomicSliceDownload_asyncToGenerator((function*(params){var{label,start,end}=params,checksum=(yield fetchRegionMetadata(params)).region.sequence.checksum,refgetUrl=refget({checksum,start,end});return{label,sequence:yield fetch(refgetUrl).then((response=>response.text()))}}));return function getGenomicSliceSequence(_x){return _ref.apply(this,arguments)}}(),fetchRegionMetadata=function(){var _ref2=genomicSliceDownload_asyncToGenerator((function*(variables){var graphQLClient=new esm.l4("/api/graphql/core",{jsonSerializer:JSON});return yield graphQLClient.request(regionChecksumQuery,variables)}));return function fetchRegionMetadata(_x2){return _ref2.apply(this,arguments)}}();function featureSequenceDownload_worker_asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function featureSequenceDownload_worker_asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){featureSequenceDownload_worker_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){featureSequenceDownload_worker_asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _asyncIterator(r){var n,t,o,e=2;for("undefined"!=typeof Symbol&&(t=Symbol.asyncIterator,o=Symbol.iterator);e--;){if(t&&null!=(n=r[t]))return n.call(r);if(o&&null!=(n=r[o]))return new AsyncFromSyncIterator(n.call(r));t="@@asyncIterator",o="@@iterator"}throw new TypeError("Object is not async iterable")}function AsyncFromSyncIterator(r){function AsyncFromSyncIteratorContinuation(r){if(Object(r)!==r)return Promise.reject(new TypeError(r+" is not an object."));var n=r.done;return Promise.resolve(r.value).then((function(r){return{value:r,done:n}}))}return AsyncFromSyncIterator=function AsyncFromSyncIterator(r){this.s=r,this.n=r.next},AsyncFromSyncIterator.prototype={s:null,n:null,next:function next(){return AsyncFromSyncIteratorContinuation(this.n.apply(this.s,arguments))},return:function _return(r){var n=this.s.return;return void 0===n?Promise.resolve({value:r,done:!0}):AsyncFromSyncIteratorContinuation(n.apply(this.s,arguments))},throw:function _throw(r){var n=this.s.return;return void 0===n?Promise.reject(r):AsyncFromSyncIteratorContinuation(n.apply(this.s,arguments))}},new AsyncFromSyncIterator(r)}var downloadSequencesForGene=function(){var _ref=featureSequenceDownload_worker_asyncToGenerator((function*(options){var _iteratorError,body="",_iteratorAbruptCompletion=!1,_didIteratorError=!1;try{for(var _step,_iterator=_asyncIterator(function geneAndTranscriptsSequences(_x){return _geneAndTranscriptsSequences.apply(this,arguments)}(options));_iteratorAbruptCompletion=!(_step=yield _iterator.next()).done;_iteratorAbruptCompletion=!1){var sequenceData=_step.value;sequenceData&&(body=growFastaString({data:sequenceData,body}))}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{_iteratorAbruptCompletion&&null!=_iterator.return&&(yield _iterator.return())}finally{if(_didIteratorError)throw _iteratorError}}return body}));return function downloadSequencesForGene(_x){return _ref.apply(this,arguments)}}(),downloadSequencesForTranscript=function(){var _ref2=featureSequenceDownload_worker_asyncToGenerator((function*(options){var _iteratorError2,body="",_iteratorAbruptCompletion2=!1,_didIteratorError2=!1;try{for(var _step2,_iterator2=_asyncIterator(function transcriptAndGeneSequences(_x2){return _transcriptAndGeneSequences.apply(this,arguments)}(options));_iteratorAbruptCompletion2=!(_step2=yield _iterator2.next()).done;_iteratorAbruptCompletion2=!1){var sequenceData=_step2.value;sequenceData&&(body=growFastaString({data:sequenceData,body}))}}catch(err){_didIteratorError2=!0,_iteratorError2=err}finally{try{_iteratorAbruptCompletion2&&null!=_iterator2.return&&(yield _iterator2.return())}finally{if(_didIteratorError2)throw _iteratorError2}}return body}));return function downloadSequencesForTranscript(_x2){return _ref2.apply(this,arguments)}}(),downloadSequencesForProtein=function(){var _ref3=featureSequenceDownload_worker_asyncToGenerator((function*(options){var _iteratorError3,body="",_iteratorAbruptCompletion3=!1,_didIteratorError3=!1;try{for(var _step3,_iterator3=_asyncIterator(function getProteinRelatedSequences(_x){return _getProteinRelatedSequences.apply(this,arguments)}(options));_iteratorAbruptCompletion3=!(_step3=yield _iterator3.next()).done;_iteratorAbruptCompletion3=!1){var sequenceData=_step3.value;sequenceData&&(body=growFastaString({data:sequenceData,body}))}}catch(err){_didIteratorError3=!0,_iteratorError3=err}finally{try{_iteratorAbruptCompletion3&&null!=_iterator3.return&&(yield _iterator3.return())}finally{if(_didIteratorError3)throw _iteratorError3}}return body}));return function downloadSequencesForProtein(_x3){return _ref3.apply(this,arguments)}}(),growFastaString=params=>{var{data:{label,sequence},body}=params,fastaString=toFasta({header:label,value:sequence});return body?body+"\n"+fastaString:fastaString},workerApi={downloadSequencesForGene,downloadSequencesForTranscript,downloadSequencesForProtein,downloadGenomicSlice:function(){var _ref4=featureSequenceDownload_worker_asyncToGenerator((function*(options){var{label,sequence}=yield getGenomicSliceSequence(options);return toFasta({header:label,value:sequence})}));return function downloadGenomicSlice(_x4){return _ref4.apply(this,arguments)}}()};(0,comlink.p)(workerApi)}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.x=()=>{var __webpack_exports__=__webpack_require__.O(void 0,[4691,1668,9193,380],(()=>__webpack_require__("./src/shared/workers/feature-sequence-download/featureSequenceDownload.worker.ts")));return __webpack_exports__=__webpack_require__.O(__webpack_exports__)},deferred=[],__webpack_require__.O=(result,chunkIds,fn,priority)=>{if(!chunkIds){var notFulfilled=1/0;for(i=0;i<deferred.length;i++){for(var[chunkIds,fn,priority]=deferred[i],fulfilled=!0,j=0;j<chunkIds.length;j++)(!1&priority||notFulfilled>=priority)&&Object.keys(__webpack_require__.O).every((key=>__webpack_require__.O[key](chunkIds[j])))?chunkIds.splice(j--,1):(fulfilled=!1,priority<notFulfilled&&(notFulfilled=priority));if(fulfilled){deferred.splice(i--,1);var r=fn();void 0!==r&&(result=r)}}return result}priority=priority||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>priority;i--)deferred[i]=deferred[i-1];deferred[i]=[chunkIds,fn,priority]},__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module.default:()=>module;return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.f={},__webpack_require__.e=chunkId=>Promise.all(Object.keys(__webpack_require__.f).reduce(((promises,key)=>(__webpack_require__.f[key](chunkId,promises),promises)),[])),__webpack_require__.u=chunkId=>chunkId+"."+{380:"f7ab6bf6",1668:"28768af0",4691:"f02e71c1",9193:"c2d24e4d"}[chunkId]+".iframe.bundle.js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__webpack_require__.p="",(()=>{var installedChunks={7248:1};__webpack_require__.f.i=(chunkId,promises)=>{installedChunks[chunkId]||importScripts(__webpack_require__.p+__webpack_require__.u(chunkId))};var chunkLoadingGlobal=globalThis.webpackChunkensembl_new=globalThis.webpackChunkensembl_new||[],parentChunkLoadingFunction=chunkLoadingGlobal.push.bind(chunkLoadingGlobal);chunkLoadingGlobal.push=data=>{var[chunkIds,moreModules,runtime]=data;for(var moduleId in moreModules)__webpack_require__.o(moreModules,moduleId)&&(__webpack_require__.m[moduleId]=moreModules[moduleId]);for(runtime&&runtime(__webpack_require__);chunkIds.length;)installedChunks[chunkIds.pop()]=1;parentChunkLoadingFunction(data)}})(),next=__webpack_require__.x,__webpack_require__.x=()=>Promise.all([4691,1668,9193,380].map(__webpack_require__.e,__webpack_require__)).then(next);__webpack_require__.x()})();