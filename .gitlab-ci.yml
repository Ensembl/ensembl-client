# CI/CD Pipeline
# dev branch -> staging (runs exactly the same code as live; opportunity to inspect the site before pushing to production)
# master branch -> internal (runs from the same master branch as live; but with flags enabled for seeing the latest UI changes that may not be ready for production)
# master branch -> live

# include template to setup review app
include: '/gitlab-ci-templates/.setup-review-template.yaml'

# Define stages for the CI/CD pipeline
stages:
  - setup
  - test
  - test_build_static
  - build_docker_images
  - deploy

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}
  CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}
  KUBE_CONTEXT: ens-dev-ctx
  DEPLOYENV: dev
  ENVIRONMENT: production
  DOCKER_TLS_CERTDIR: ""

# Template to build static assets
.build-static:
  stage: test_build_static
  image: node:18.12.0

  before_script:
  - npm install --global npm@8.1.0
  - npm ci --loglevel warn

  script:
  - npm run test
  - npm run build

  after_script:
    - echo "BUILD_JOB_ID=${CI_JOB_ID}" >> build_static.env

  artifacts:
    name: build_artifacts
    paths:
      - dist/
      - package.json
      - package-lock.json
    reports:
      dotenv: build_static.env

# Template to build nginx docker image for WP k8s cluster
# WP k8s cluster uses ingress
.build-nginx:
  image: docker

  services:
    - docker:dind

  stage: build_docker_images

  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - apk update && apk add git
    - git clone --depth 1 https://github.com/Ensembl/ensembl-2020-static-assests.git
    - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-nginx.git
    - git -C ensembl-client-nginx checkout migration/ssr
    - docker build -t ${CONTAINER_IMAGE} -f ensembl-client-nginx/Dockerfile --no-cache .
    - docker push ${CONTAINER_IMAGE}
    - docker rmi ${CONTAINER_IMAGE}
    - docker logout $CI_REGISTRY

.publish_assets:
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.5
  stage: deploy
  environment:
    name: jobs/k8s-job

  before_script:
    - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
    - git -C ensembl-k8s-manifests/ checkout wp-k8s
    - cd ensembl-k8s-manifests

  script:
    - sed -i "s#<PROJECT_ID>#${CI_PROJECT_ID}#g" static_assets_copy_job.yaml
    - sed -i "s#<JOB_ID>#${BUILD_JOB_ID}#g" static_assets_copy_job.yaml
    - kustomize edit set namesuffix -- -${CI_PROJECT_ID}-${BUILD_JOB_ID}
    - kubectl apply -k .

# Template for publishing static assets for the new kubernetes cluster
# Will need updating after the migration is completed (see the name of the template, name of the ensembl-k8s-manifests branch)
.publish_assets-newcluster:
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:latest
  stage: deploy
  environment:
    name: jobs/k8s-job

  before_script:
    - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
    - git -C ensembl-k8s-manifests/ checkout k8s123-migration
    - cd ensembl-k8s-manifests/ensembl-client/static-assets

  script:
    - sed -i "s#<PROJECT_ID>#${CI_PROJECT_ID}#g" copy_job.yaml
    - sed -i "s#<JOB_ID>#${BUILD_JOB_ID}#g" copy_job.yaml
    - kustomize edit set namesuffix -- -${CI_PROJECT_ID}-${BUILD_JOB_ID}
    - kubectl apply -k .

# Template to build node docker image for WP k8s cluster
# WP k8s cluster uses ingress
.build-node:
  image: docker

  services:
    - docker:dind

  stage: build_docker_images

  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - docker build -t ${CONTAINER_NODE_IMAGE} -f Dockerfile.node --no-cache .
    - docker push ${CONTAINER_NODE_IMAGE}
    - docker rmi ${CONTAINER_NODE_IMAGE}
    - docker logout $CI_REGISTRY

# Template to deploy to WP k8s cluster
.deploy:
  stage: deploy
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.1
  script:
  - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
  - git -C ensembl-k8s-manifests/ checkout wp-k8s
  - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_NODE_IMAGE}#g" ensembl-k8s-manifests/ensembl_client_node_deployment.yaml
  - kubectl apply -f ensembl-k8s-manifests/ensembl_client_node_deployment.yaml

# Template for deployment to the new kubernetes cluster
# For live deployment, it does not need to deploy a static assets container
# Will need updating after the migration is completed (the name of the template, name of the ensembl-k8s-manifests branch)
.deploy-newcluster:
  stage: deploy
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:latest
  script:
    - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
    - git -C ensembl-k8s-manifests/ checkout k8s123-migration
    - cd ensembl-k8s-manifests/ensembl-client/node
    - kustomize edit set image DOCKER_IMAGE=${CONTAINER_NODE_IMAGE}
    - kubectl apply -k ./

# Template to deploy review-app to WP k8s cluster
.deploy-review:
  stage: deploy
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.1
  script:
  - git clone https://gitlab.ebi.ac.uk/ensembl-web/ensembl-k8s-manifests.git
  - git -C ensembl-k8s-manifests/ checkout wp-k8s-review
  - sed -i "s#<DEPLOYMENT_ENV>#${CI_COMMIT_REF_SLUG}#g" ensembl-k8s-manifests/ensembl_client_nginx_deployment.yaml
  - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_IMAGE}#g" ensembl-k8s-manifests/ensembl_client_nginx_deployment.yaml
  - sed -i "s#<DEPLOYMENT_ENV>#${CI_COMMIT_REF_SLUG}#g" ensembl-k8s-manifests/ensembl_client_node_deployment.yaml
  - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_NODE_IMAGE}#g" ensembl-k8s-manifests/ensembl_client_node_deployment.yaml
  - kubectl apply -f ensembl-k8s-manifests/ensembl_client_nginx_deployment.yaml
  - kubectl apply -f ensembl-k8s-manifests/ensembl_client_node_deployment.yaml

# Template for stopping review app - Do cleanup here 
.stop-review:
  stage: deploy
  image: dockerhub.ebi.ac.uk/ensembl-web/deploy-tools:0.1
  variables:
    GIT_STRATEGY: none
  when: manual
  script:
  - kubectl delete ingress ensembl-client-${CI_COMMIT_REF_SLUG}-nginx-ingress
  - kubectl delete ingress ensembl-client-${CI_COMMIT_REF_SLUG}-node-ingress
  - kubectl delete svc ensembl-client-${CI_COMMIT_REF_SLUG}-nginx-svc
  - kubectl delete svc ensembl-client-${CI_COMMIT_REF_SLUG}-node-svc
  - kubectl delete deploy ensembl-client-${CI_COMMIT_REF_SLUG}-nginx-deployment
  - kubectl delete deploy ensembl-client-${CI_COMMIT_REF_SLUG}-node-deployment

Test:
  image: node:18.12.0
  stage: test

  before_script:
  - npm install --global npm@8.1.0
  - npm ci --loglevel warn

  script:
  - npm run check-types
  - npm run test

  only:
  - /^nodeploy\/.*$/
  except:
  - dev
  - master

# Job to build static asset for staging and live environment
# dev branch -> Staging
# master branch -> Live
Test_N_Build:
  extends: .build-static
  variables:
    GOOGLE_ANALYTICS_KEY: ${GA_KEY}
    ENVIRONMENT: production
    API_HOST: ""
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "dev"

# Job to build static asset for internal environment
# master branch -> Internal
Test_N_Build:internal:
  extends: .build-static
  variables:
    GOOGLE_ANALYTICS_KEY: ${GA_KEY}
    ENVIRONMENT: internal
    API_HOST: ""
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

Test_N_Build:review:
  extends: .build-static
  variables:
    ENVIRONMENT: development
    API_HOST: ""

  except:
  - dev
  - master
  - /^nodeploy\/.*$/

# Job to build node docker image for staging environment
# dev branch -> Staging
Node:Staging:
  extends: .build-node
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  needs:
    - Test_N_Build

# Job to build node docker image for live environment
# master branch -> Live
Node:Live:
  extends: .build-node
  variables:
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-prod
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build

# Job to build node docker image for internal environment at WP
# master branch -> internal
Node:Internal:
  extends: .build-node
  variables:
    DEPLOYENV: internal
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-internal
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build:internal

# Job to build nginx docker image for review environment at WP
# all other branch -> dev
Nginx:review:
  extends: .build-nginx
  variables:
    DEPLOYENV: dev
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
  except:
  - dev
  - master
  - /^nodeploy\/.*$/

  needs:
    - Test_N_Build:review

# Job to build node docker image for review environment at WP
# all other branch -> dev
Node:review:
  extends: .build-node
  variables:
    DEPLOYENV: dev
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
  except:
  - dev
  - master
  - /^nodeploy\/.*$/

  needs:
    - Test_N_Build:review


######## DEPLOYMENT JOBS ########

# Job to deploy to staging environment (WP-HX k8s cluster)
Staging:HX:
  extends: .deploy
  environment:
    name: wp-hx-staging
  only:
  - dev
  needs:
    - Test_N_Build
    - Node:Staging

Pub:Staging-HX:
  extends: .publish_assets
  environment:
    name: hx-jobs/staging
    kubernetes:
      namespace: ensembl-stage
  only:
    - dev
  needs:
    - Test_N_Build
    - Node:Staging

# Job to deploy to staging environment (WP-HL k8s cluster)
Staging:HL:
  extends: .deploy
  environment:
    name: wp-hh-staging
  only:
  - dev
  needs:
    - Test_N_Build
    - Node:Staging

Pub:Staging-HL:
  extends: .publish_assets
  environment:
    name: hl-jobs/staging
    kubernetes:
      namespace: ensembl-stage
  only:
    - dev
  needs:
    - Test_N_Build
    - Node:Staging

# Job to deploy to staging environment on the new cluster (WP40-HL k8s cluster)
Staging:WP40:HL:
  extends: .deploy-newcluster
  environment:
    name: wp40-hl-staging
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  needs:
    - Test_N_Build
    - Node:Staging

Pub:Staging:WP40:HL:
  extends: .publish_assets-newcluster
  environment:
    name: wp40-hl-staging
    kubernetes:
      namespace: ensembl-stage
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  needs:
    - Test_N_Build
    - Node:Staging

# Job to deploy to live environment (WP-HX k8s cluster)
Live:HX:
  extends: .deploy
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-prod
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-prod
  environment:
    name: wp-hx-live
  only:
  - master
  needs:
    - Test_N_Build
    - Node:Live

Pub:Live-HX:
  extends: .publish_assets
  environment:
    name: hx-jobs/prod
    kubernetes:
      namespace: ensembl-prod
  only:
  - master
  needs:
    - Test_N_Build
    - Node:Live

# Job to deploy to live environment (WP-HL k8s cluster)
Live:HL:
  extends: .deploy
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-prod
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-prod
  environment:
    name: wp-hh-live
  only:
  - master
  needs:
    - Test_N_Build
    - Node:Live

Pub:Live-HL:
  extends: .publish_assets
  environment:
    name: hl-jobs/prod
    kubernetes:
      namespace: ensembl-prod
  only:
  - master
  needs:
    - Test_N_Build
    - Node:Live

# Job to deploy to live environment in the new kubernetes cluster (wp40)
Live:wp40:HL:
  extends: .deploy-newcluster
  variables:
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-prod
  environment:
    name: wp40-hl-prod
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build
    - Node:Live

Pub:Live-HL:wp40:
  extends: .publish_assets-newcluster
  environment:
    name: wp40-hl-prod
    kubernetes:
      namespace: ensembl-prod
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build
    - Node:Live


# Job to deploy a production fallback to the new kubernetes cluster in Hinxton (WP41)
Live:WP41:HX:
  extends: .deploy-newcluster
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-prod
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-prod
  environment:
    name: wp41-hx-prod
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build
    - Node:Live

Pub::WP41:Live-HX:
  extends: .publish_assets-newcluster
  environment:
    name: wp41-hx-prod
    kubernetes:
      namespace: ensembl-prod
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build
    - Node:Live


# Job to deploy to internal environment (WP-HX k8s cluster)
Internal:HX:
  extends: .deploy
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-internal
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-internal
  environment:
    name: wp-hx-internal
  only:
  - master
  needs:
    - Test_N_Build:internal
    - Node:Internal

Pub:Internal-HX:
  extends: .publish_assets
  environment:
    name: hx-jobs/internal
    kubernetes:
      namespace: ensembl-internal
  only:
  - master
  needs:
    - Test_N_Build:internal
    - Node:Internal

# Job to deploy to internal environment (WP-HL k8s cluster)
Internal:HL:
  extends: .deploy
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-internal
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-internal
  environment:
    name: wp-hh-internal
  only:
  - master
  needs:
    - Test_N_Build:internal
    - Node:Internal

Pub:Internal-HL:
  extends: .publish_assets
  environment:
    name: hl-jobs/internal
    kubernetes:
      namespace: ensembl-internal
  only:
  - master
  needs:
    - Test_N_Build:internal
    - Node:Internal

# Job to deploy to internal environment in the new cluster in Harlow (WP40)
Internal:WP40:HL:
  extends: .deploy-newcluster
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-internal
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-internal
  environment:
    name: wp40-hl-internal
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build:internal
    - Node:Internal

Pub:Internal::WP40:HL:
  extends: .publish_assets-newcluster
  environment:
    name: wp40-hl-internal
    kubernetes:
      namespace: ensembl-internal
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  needs:
    - Test_N_Build:internal
    - Node:Internal

# Job to deploy review deployments to development environment in Hinxton
Review:HX:
  extends: .deploy-review
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: http://$CI_COMMIT_REF_SLUG.review.ensembl.org
    on_stop: stop_review
    kubernetes:
      namespace: ensembl-dev
  except:
  - dev
  - master
  - /^nodeploy\/.*$/
  needs:
    - Test_N_Build:review
    - Nginx:review
    - Node:review

# Job to deploy review deployments to development environment in the new cluster in Harlow (WP40)
Review:WP40:HL:
  extends: .deploy-newcluster
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: http://$CI_COMMIT_REF_SLUG.review.ensembl.org
    on_stop: stop_review
    kubernetes:
      namespace: ensembl-dev
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $CI_COMMIT_BRANCH != "dev" && $CI_COMMIT_BRANCH !~ /^nodeploy\/.*$/
  needs:
    - Test_N_Build:review
    - Nginx:review
    - Node:review

# Job to deploy review deployments to development environment in the new cluster in Harlow (WP40)
Review:WP41:HX:
  extends: .deploy-newcluster
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:nginx-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
    CONTAINER_NODE_IMAGE: ${CI_REGISTRY_IMAGE}:node-${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: http://$CI_COMMIT_REF_SLUG.review.ensembl.org
    on_stop: stop_review
    kubernetes:
      namespace: ensembl-dev
  rules:
    - if: $CI_COMMIT_BRANCH != "master" && $CI_COMMIT_BRANCH != "dev" && $CI_COMMIT_BRANCH !~ /^nodeploy\/.*$/
  needs:
    - Test_N_Build:review
    - Nginx:review
    - Node:review


stop_review:
  extends: .stop-review
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
    kubernetes:
      namespace: ensembl-dev
  except:
  - dev
  - master
  - /^nodeploy\/.*$/

SetupReview:HX:
  extends: .setup-review
  environment:
    name: wp-hx-dev-ing
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && 
          $CI_COMMIT_BEFORE_SHA == "0000000000000000000000000000000000000000" && 
          $CI_COMMIT_REF_NAME !~  "/^nodeploy\/.*$/"
      when: always
